pipeline{
    agent any
  tools {
      maven 'M3'
    }
    environment{
      APPLICATIONNAME="samplesan"
      ANYPOINTSTUDIO_CREDENTIALS= credentials('anypoint-studio-snjy')
      DEPLOYMENT_TYPE = sh(script: "/devops/bin/checkRunType.sh ${APPLICATIONNAME}", , returnStdout: true).trim()
    }
    stages{
       stage('BuildCode'){
        steps{

            dir('samplesan'){
                sh 'mvn clean install'
            }
        }
       }
          stage("upload artifactory")
        {
            steps{
            script{
                sh "git rev-parse --short HEAD> .git/commit-id"
                def commit_id= readFile('.git/commit-id')
                sh "/devops/bin/appendCommitid.sh ${workspace}/${applicationName}/target ${commit_id}"
                //Creating a artifacts in local server first gives a clear visibility on jenkins builds and later uploading code to jfrog artifactory
                sh "mkdir /devops/out/CDScript/working/${BUILD_NUMBER}_${JOB_NAME}"
                sh "cp -r ${workspace}/${applicationName}/target/*.jar /devops/out/CDScript/working/${BUILD_NUMBER}_${JOB_NAME}/"
                def branchd =load "muleDevopsConfig/BranchDetails.groovy"
                def branchname= branchd.getBranchName()
		    echo "branch name ${branchname}"
		/*
                def server = Artifactory.server 'Artifactorytest'
                  def uploadSpec = """{
                    "files": [
                      {
                        "pattern":"/devops/out/CDScript/working/${BUILD_NUMBER}_${JOB_NAME}/*.jar",
                        "target": "libs-snapshot-local/${branchname}/",
                        "recursive": "true",
                        "flat": "true"
                    }
                     ]
                    }"""

                  server.upload(uploadSpec) */
        }
        }
    }
    stage("Deploy") {
        steps {
          script{
            jarName=sh (script : "ls /devops/out/CDScript/working/${BUILD_NUMBER}_${JOB_NAME}/",returnStdout:true)
            echo "${jarName}"
		  def deploy= load "${workspace}/muleDevopsConfig/deployToCloudHub.groovy"
	          deploy.deployToCloudHub(jarName)
          }
        }

    }
  }
}
